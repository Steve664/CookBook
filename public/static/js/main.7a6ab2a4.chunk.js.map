{"version":3,"sources":["components/login.js","components/signup.js","components/recipespage.js","components/dashboard.js","components/recipeform.js","components/recipeview.js","components/navbar.js","components/landingpage.js","App.js","reportWebVitals.js","index.js"],"names":["Login","useState","inputs","setInputs","navigate","useNavigate","useEffect","token","Cookies","get","fetch","method","headers","then","response","json","data","catch","error","console","log","handleChange","event","name","target","value","values","handleLogin","a","body","JSON","stringify","set","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Image","src","Form","size","onSubmit","Segment","stacked","Input","email","onChange","fluid","icon","iconPosition","placeholder","password","type","Button","Message","to","SignUp","handleSubmit","required","attached","warning","Icon","RecipePage","recipes","setRecipes","padding","map","recipe","Item","Group","divided","image","Content","title","Description","description","Extra","id","Divider","Dashboard","user","setUser","editingRecipeId","setEditingRecipeId","deletingRecipeId","setDeletingRecipeId","deleteConfirmationOpen","setDeleteConfirmationOpen","primary","onClick","negative","Modal","open","preventDefault","updatedRecipe","newRecipes","handleEditSubmit","Field","defaultValue","find","Actions","ok","filter","RecipeForm","setTitle","setImage","setDescription","instructions","setInstructions","paddingTop","paddingBottom","RecipeView","setRecipe","reviews","setReviews","author","setAuthor","useParams","rating","content","newReview","setNewReview","handleReviewSubmit","e","review","statusText","alert","authors","alt","className","Comment","dividing","index","Author","Metadata","created_at","Text","Rating","defaultRating","maxRating","disabled","onRate","TextArea","labelPosition","Navbar","loggedIn","setLoggedIn","activeItem","setActiveItem","handleItemClick","inverted","Menu","pointing","secondary","active","Link","position","remove","LandingPage","Container","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a6ab2a4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport Cookies from 'js-cookie'\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\n\nfunction Login() {\n    const [inputs, setInputs] = useState({});\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        const token = Cookies.get('token');\n        if (token) {\n            // verify session token\n            fetch('/users', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            })\n                .then(response => response.json())\n                .then(data => (data !== null ? navigate('/dashboard') : navigate('/')))\n                .catch(error => console.log(error));\n\n\n        }\n\n    }, []);\n\n\n    const handleChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        setInputs(values => ({ ...values, [name]: value }))\n    }\n\n    const handleLogin = async () => {\n\n        const response = await fetch('/auth/login', {\n            method: 'POST',\n            body: JSON.stringify(inputs),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        const data = await response.json();\n        console.log(data)\n\n        Cookies.set('token', data.token);\n\n        navigate('/dashboard');\n    }\n\n    return (\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 450 }}>\n                <Header as='h2' color='black' textAlign='center'>\n                    <Image src='https://cdn.dribbble.com/users/2425253/screenshots/15276005/media/96f7e2bd3cc1089bcbf0eb26d74b4a08.jpg?compress=1&resize=1000x750&vertical=top' /> Log-in to your account\n                </Header>\n                <Form size='large' onSubmit={handleLogin}>\n                    <Segment stacked>\n                        <Form.Input name='email' value={inputs.email || \"\"} onChange={handleChange} fluid icon='user' iconPosition='left' placeholder='E-mail address' />\n\n                        <Form.Input\n                            fluid\n                            name='password'\n                            onChange={handleChange}\n                            icon='lock'\n                            iconPosition='left'\n                            value={inputs.password || \"\"}\n                            placeholder='Password'\n                            type='password'\n                        />\n\n                        <Button color='yellow' fluid size='large'>\n                            Login\n                        </Button>\n                    </Segment>\n                </Form>\n                <Message>\n                    New to us? <Link to='/signup'>Sign Up</Link>\n                </Message>\n            </Grid.Column>\n        </Grid>\n    );\n}\n\nexport default Login\n","import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { Button, Form, Grid, Header, Image, Message, Segment, Icon } from 'semantic-ui-react'\n\nfunction SignUp() {\n    const [inputs, setInputs] = useState({});\n    const navigate = useNavigate()\n    const handleChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        setInputs(values => ({ ...values, [name]: value }))\n    }\n    const handleSubmit = async () => {\n\n        const response = await fetch('/users', {\n            method: 'POST',\n            body: JSON.stringify(inputs),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        const data = await response.json();\n        console.log(data)\n        navigate('/');\n    }\n\n\n    return (\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 450 }}>\n                <Header as='h2' color='teal' textAlign='center'>\n                    <Image src='https://cdn.dribbble.com/users/2425253/screenshots/15276005/media/96f7e2bd3cc1089bcbf0eb26d74b4a08.jpg?compress=1&resize=1000x750&vertical=top' /> Sign up for an account\n                </Header>\n                <Form size='large' onSubmit={handleSubmit}>\n                    <Segment stacked>\n                        <Form.Input\n                            fluid icon='user'\n                            required\n                            name=\"email\"\n                            onChange={handleChange}\n                            iconPosition='left' type=\"email\" placeholder='E-mail address' />\n                        <Form.Input\n                            fluid icon='user'\n                            name=\"name\"\n                            onChange={handleChange}\n                            required iconPosition='left'\n                            type=\"text\"\n                            placeholder='name' />\n                        <Form.Input\n                            fluid\n                            icon='lock'\n                            required\n                            name=\"password\"\n                            onChange={handleChange}\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                        />\n\n                        <Form.Input\n                            fluid\n                            icon='lock'\n                            required\n                            name=\"password_confirmation\"\n                            onChange={handleChange}\n                            iconPosition='left'\n                            placeholder='Confirm Password'\n                            type='password'\n                        />\n\n                        <Button color='yellow' fluid size='large'>\n                            Sign Up\n                        </Button>\n                    </Segment>\n                </Form>\n                <Message attached='bottom' warning>\n                    <Icon name='help' />\n                    Already signed up<Link to='/'> Login Here</Link> instead.\n                </Message>\n\n\n\n            </Grid.Column>\n        </Grid>\n    );\n}\n\nexport default SignUp","import AllRecipeCard from \"./allRecipeCards\";\nimport React, { useState, useEffect } from \"react\"\nimport { Modal, Form, Button, Divider, Card, Item } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\n\nfunction RecipePage() {\n    const [recipes, setRecipes] = useState(null);\n\n\n    useEffect(() => {\n        fetch('/recipes')\n            .then(response => response.json())\n            .then(data => {\n                setRecipes(data); // logs the recipe data returned from the server\n            })\n            .catch(error => console.log(error));\n        //if not valid redirect\n        // else {}\n    }, []);\n\n\n    return (\n        <div style={{ padding: \"50px\" }}>\n            <h1>Recipes</h1>\n            {recipes && recipes.map((recipe) => {\n                return (<Item.Group divided>\n                    <Item key={recipe.id}>\n                        <Item.Image src={recipe.image} size=\"medium\" />\n\n                        <Item.Content>\n                            <Item.Header>{recipe.title}</Item.Header>\n                            <Item.Description>{recipe.description}</Item.Description>\n                            <Item.Extra>\n\n                                <Link to={`/recipeview/${recipe.id}`}><Button >View</Button></Link>\n\n                            </Item.Extra>\n                        </Item.Content>\n                    </Item>\n                    <Divider />\n                </Item.Group>\n                );\n            })}\n        </div>\n    );\n\n}\nexport default RecipePage","import React, { useState, useEffect } from \"react\"\nimport Cookies from 'js-cookie';\nimport RecipeCard from \"./recipecard\";\nimport { Link } from 'react-router-dom';\nimport { Modal, Form, Button, Divider, Card, Item } from 'semantic-ui-react';\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Dashboard() {\n    const [user, setUser] = useState({});\n    const [editingRecipeId, setEditingRecipeId] = useState(null);\n    const [deletingRecipeId, setDeletingRecipeId] = useState(null);\n    const token = Cookies.get('token');\n    const navigate = useNavigate()\n    const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n\n    useEffect(() => {\n        if (token) {\n            // verify session token\n            fetch('/users', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            })\n                .then(response => response.json())\n                .then(data => setUser(data))\n                .catch(error => console.log(error));\n        }\n        //if not valid redirect\n        else { navigate('/login') }\n    }, []);\n\n\n\n    const handleEdit = (id) => {\n        setEditingRecipeId(id);\n    }\n\n    const handleEditSubmit = (data) => {\n        // send PATCH request to server with updated data\n        fetch(`/recipes/${editingRecipeId}`, {\n            method: 'PATCH',\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n            .then(response => response.json())\n            .then(updatedRecipe => {\n                // replace old recipe with updated recipe in user's recipes list\n                const newRecipes = user.recipes.map(recipe => {\n                    if (recipe.id === updatedRecipe.id) {\n                        return updatedRecipe;\n                    }\n                    return recipe;\n                });\n                setUser({ ...user, recipes: newRecipes });\n                // close modal\n                setEditingRecipeId(null);\n            })\n            .catch(error => console.log(error));\n    }\n\n    const handleDelete = (id) => {\n        setDeleteConfirmationOpen(true);\n        setDeletingRecipeId(id);\n    }\n\n    const handleDeleteConfirm = () => {\n        // send DELETE request to server with recipe ID\n        fetch(`/recipes/${deletingRecipeId}`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(response => {\n                if (response.ok) {\n                    // remove recipe from user's recipes list\n                    const newRecipes = user.recipes.filter(recipe => recipe.id !== deletingRecipeId);\n                    setUser({ ...user, recipes: newRecipes });\n                }\n                setDeleteConfirmationOpen(false);\n                setDeletingRecipeId(null);\n            })\n            .catch(error => console.log(error));\n    }\n\n    const handleDeleteCancel = () => {\n        setDeleteConfirmationOpen(false);\n        setDeletingRecipeId(null);\n    }\n\n    return (\n        <div style={{ padding: \"50px\" }}>\n            <h2>Hello {user.name}</h2>\n\n\n            {user.recipes && user.recipes.map((recipe) => {\n                return (<Item.Group divided>\n                    <Item key={recipe.id}>\n                        <Item.Image src={recipe.image} size=\"medium\" />\n\n                        <Item.Content>\n                            <Item.Header>{recipe.title}</Item.Header>\n                            <Item.Description>{recipe.description}</Item.Description>\n                            <Item.Extra>\n\n                                <Link to={`/recipeview/${recipe.id}`}><Button >View</Button></Link>\n                                <Button primary onClick={() => handleEdit(recipe.id)}>Edit</Button>\n                                <Button negative onClick={() => handleDelete(recipe.id)}>Delete</Button>\n                            </Item.Extra>\n                        </Item.Content>\n                    </Item>\n                    <Divider />\n                </Item.Group>\n                );\n            })}\n\n            <Modal open={editingRecipeId !== null}>\n                <Modal.Header>Edit Recipe</Modal.Header>\n                <Modal.Content>\n                    <Form onSubmit={(event) => {\n                        event.preventDefault();\n                        const data = {\n                            title: event.target.title.value,\n                            image: event.target.image.value,\n                            description: event.target.description.value\n                        };\n                        handleEditSubmit(data);\n                    }}>\n                        <Form.Field>\n                            <label>Title</label>\n                            <input name=\"title\" defaultValue={editingRecipeId !== null ? user.recipes.find(recipe => recipe.id === editingRecipeId).title : ''} />\n                        </Form.Field>\n                        <Form.Field>\n                            <label>Image URL</label>\n                            <input name=\"image\" defaultValue={editingRecipeId !== null ? user.recipes.find(recipe => recipe.id === editingRecipeId).image : ''} />\n                        </Form.Field>\n                        <Form.Field>\n                            <label>Description</label>\n                            <textarea name=\"description\" defaultValue={editingRecipeId !== null ? user.recipes.find(recipe => recipe.id === editingRecipeId).description : ''} />\n                        </Form.Field>\n                        <Button type=\"submit\">Save</Button>\n                    </Form>\n                </Modal.Content>\n            </Modal>\n            <Modal open={deleteConfirmationOpen}>\n                <Modal.Header>Delete Recipe</Modal.Header>\n                <Modal.Content>\n                    <p>Are you sure you want to delete this recipe?</p>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={handleDeleteCancel}>Cancel</Button>\n                    <Button negative onClick={handleDeleteConfirm}>Delete</Button>\n                </Modal.Actions>\n            </Modal>\n        </div>\n    )\n}\n\nexport default Dashboard\n","\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport Cookies from \"js-cookie\";\nfunction RecipeForm() {\n  const [title, setTitle] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const token = Cookies.get('token');\n  const navigate = useNavigate()\n  const [description, setDescription] = useState(\"\");\n  const [instructions, setInstructions] = useState(\"\");\n\n  useEffect(() => {\n    const token = Cookies.get('token');\n    if (token) {\n      return null\n    }\n    else {\n      navigate('/login')\n    }\n  }, []);\n  const onSubmit = (recipe) => {\n    fetch('/recipes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(recipe)\n    })\n      .then(response => {\n        if (response.ok) {\n          // Recipe was successfully created\n          console.log('Recipe was successfully created');\n        } else {\n          // There was an error creating the recipe\n          console.error('There was an error creating the recipe');\n        }\n      })\n      .catch(error => {\n        console.error('There was a network error', error);\n      });\n  };\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const recipe = { title, image, description, instructions };\n    onSubmit(recipe);\n    setTitle(\"\");\n    setImage(\"\");\n    setDescription(\"\");\n    setInstructions(\"\");\n  };\n\n  return (\n    <div style={{ padding: \"200px\", paddingTop: \"50px\", paddingBottom: \"50px\" }}>\n      <h2>Add recipe</h2>\n      <Form onSubmit={handleSubmit}>\n        <Form.Field>\n          <label>Title</label>\n          <input\n            type=\"text\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={(event) => setTitle(event.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Image URL</label>\n          <input\n            type=\"text\"\n            placeholder=\"Image URL\"\n            value={image}\n            onChange={(event) => setImage(event.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Description</label>\n          <textarea\n            placeholder=\"Description\"\n            value={description}\n            onChange={(event) => setDescription(event.target.value)}\n          ></textarea>\n        </Form.Field>\n        <Form.Field>\n          <label>Instructions</label>\n          <textarea\n            placeholder=\"Instructions\"\n            value={instructions}\n            onChange={(event) => setInstructions(event.target.value)}\n          ></textarea>\n        </Form.Field>\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default RecipeForm;\n","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport './css/Recipeview.css'\nimport { Rating, Divider, Form, Button, Comment, Header } from 'semantic-ui-react';\nimport Cookies from 'js-cookie';\nfunction RecipeView() {\n    const [recipe, setRecipe] = useState({});\n    const [reviews, setReviews] = useState([]);\n    const [author, setAuthor] = useState([])\n    const token = Cookies.get('token');\n    const { id } = useParams();\n\n    const [newReview, setNewReview] = useState({\n        rating: null,\n        content: ''\n    });\n\n    const handleRate = (e, { rating }) => {\n        setNewReview({ ...newReview, rating: rating });\n        console.log(rating)\n    };\n\n    const handleReviewChange = (e) => {\n        setNewReview({ ...newReview, content: e.target.value });\n    };\n\n    const handleReviewSubmit = async (e) => {\n        e.preventDefault();\n        if (token) {\n            const response = await fetch(`/recipes/${id}/reviews`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify(newReview),\n            });\n            if (response.ok) {\n                // Update the reviews state with the new review\n                const review = await response.json();\n                setReviews([...reviews, review]);\n                // Clear the form\n                setNewReview({ content: '', rating: 0 });\n            } else {\n                console.error('Failed to create review:', response.statusText);\n            }\n        }\n        else {\n            alert(\"log in to comment\")\n        }\n    };\n\n    useEffect(() => {\n        fetch(`/recipes/${id}`)\n            .then((response) => response.json())\n            .then((data) => {\n                setRecipe(data);\n            })\n            .catch((error) => console.log(error));\n\n        fetch(`/recipes/${id}/review`)\n            .then((response) => response.json())\n            .then((data) => {\n                return setReviews(data.reviews), setAuthor(data.authors);   // access the reviews array \n            })\n            .catch((error) => console.log(error));\n    }, [id]);\n\n    return (\n        <div id=\"main\">\n            <div id=\"recipe\">\n                <img id=\"Recipeimg\" src={recipe.image} alt={recipe.title} />\n                <h2 className=\"center\">\n                    <span>{recipe.title}</span>\n                </h2>\n                <h3>Description:</h3>\n                <p>{recipe.description}</p>\n                <h3>instructions:</h3>\n                <p>{recipe.instructions}</p>\n            </div>\n            <div id=\"reviews\">\n                <Divider />\n                <Comment.Group >\n                    <Header as='h3' dividing>\n                        Reviews\n                    </Header>\n                    {reviews && reviews.map((review, index) => {\n                        return <Comment key={index}>\n                            <Comment.Content>\n                                <Comment.Author as='a'>{author[index] || \"You\"}</Comment.Author>\n                                <Comment.Metadata>\n                                    <div>{review.created_at}</div>\n                                </Comment.Metadata>\n                                <Comment.Text>{review.content}</Comment.Text>\n                                <Comment.Metadata>\n                                    <span>Rating:</span>\n                                    <Rating defaultRating={review.rating} maxRating={5} disabled />\n                                </Comment.Metadata>\n                            </Comment.Content>\n                        </Comment>\n                    }\n                    )}\n                    <Divider />\n                    <Form onSubmit={handleReviewSubmit}>\n                        <span>Rating:</span>\n                        <Rating maxRating={5} onRate={handleRate} />\n                        <Form.TextArea name='content' placeholder='Write a review...' onChange={handleReviewChange} value={newReview.content || ''} />\n                        <Button content='Add Review' labelPosition='left' icon='edit' primary />\n                    </Form>\n                </Comment.Group>\n\n            </div>\n        </div>\n    );\n}\n\nexport default RecipeView;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Menu, Segment } from \"semantic-ui-react\";\nimport Cookies from \"js-cookie\";\n\nfunction Navbar() {\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [activeItem, setActiveItem] = useState('');\n  const navigate = useNavigate()\n  const token = Cookies.get('token');\n  useEffect(() => {\n\n    if (token) {\n      setLoggedIn(true);\n    }\n  }, [token]);\n\n\n  const handleLogout = () => {\n    // clear session cookie\n\n    Cookies.remove('token');\n    setLoggedIn(false);\n    navigate('/')\n  }\n\n  const handleItemClick = (e, { name }) => setActiveItem(name);\n\n  return (\n    <Segment inverted>\n      <Menu inverted pointing secondary>\n        <Menu.Item\n          name='home'\n          active={activeItem === 'home'}\n          onClick={handleItemClick}\n          as={Link} to=\"/\">\n          Home\n        </Menu.Item>\n        <Menu.Item\n          name='recipes'\n          active={activeItem === 'recipes'}\n          onClick={handleItemClick}\n          as={Link} to=\"/recipes\">\n          Recipes\n        </Menu.Item>\n\n        {loggedIn ? (<Menu.Menu position=\"right\">\n          <Menu.Item\n            name='dashboard'\n            active={activeItem === 'dashboard'}\n            onClick={handleItemClick}\n            as={Link} to=\"/dashboard\">\n            Your Dashboard\n          </Menu.Item>\n\n          <Menu.Item\n            name='addrecipe'\n            active={activeItem === 'addrecipe'}\n            onClick={handleItemClick}\n            as={Link} to=\"/recipeform\">\n            Add Recipe\n          </Menu.Item>\n\n          <Menu.Item onClick={handleLogout}>\n            Log Out\n          </Menu.Item>\n\n        </Menu.Menu>) : (<Menu.Menu position=\"right\">\n          <Menu.Item\n            name='login'\n            active={activeItem === 'login'}\n            onClick={handleItemClick}\n            as={Link} to=\"/login\">\n            Login\n          </Menu.Item>\n          <Menu.Item\n            name='signup'\n            active={activeItem === 'signup'}\n            onClick={handleItemClick}\n            as={Link} to=\"/signup\">\n            Sign Up\n          </Menu.Item>\n        </Menu.Menu>)\n        }\n      </Menu>\n    </Segment>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Header, Button } from \"semantic-ui-react\";\n\nfunction LandingPage() {\n    return (\n        <Container>\n            <Header as=\"h1\" textAlign=\"center\">\n                Welcome to the Recipe App!\n            </Header>\n            <p>\n                This app allows you to browse, create, and share recipes with others.\n                Whether you're looking for inspiration or want to showcase your cooking\n                skills, our community of foodies is here to help.\n            </p>\n            <Button color=\"teal\" as={Link} to=\"/recipes\">\n                Get started\n            </Button>\n        </Container>\n    );\n}\n\nexport default LandingPage;\n","\nimport './App.css';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Login from './components/login'\nimport SignUp from './components/signup'\nimport RecipePage from './components/recipespage';\nimport Dashboard from './components/dashboard';\nimport RecipeForm from './components/recipeform'\nimport RecipeView from './components/recipeview';\nimport 'semantic-ui-css/semantic.min.css';\nimport Navbar from './components/navbar';\nimport LandingPage from './components/landingpage'\nfunction App() {\n\n  return (\n\n\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route exact path=\"/\" element={<LandingPage />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/signup\" element={<SignUp />} />\n        <Route path=\"/dashboard\" element={<Dashboard />} />\n        <Route path=\"/recipeform\" element={<RecipeForm />} />\n        <Route path=\"/recipes\" element={<RecipePage />} />\n        <Route path=\"/recipeview/:id\" element={<RecipeView />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}